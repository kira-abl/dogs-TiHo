{"version":3,"sources":["Home.js","Container/Container.js","Button/Button.js","Menu.js","App.js","index.js"],"names":["Survey","applyTheme","json","surveyId","surveyPostId","onValueChanged","options","console","log","valuesHash","Home","model","React","useState","completed","setCompleted","to","className","onComplete","result","data","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","alert","Error","catch","err","Container","props","children","Button","onClick","function","fileDownload","require","MainMenu","indicator","setIndicator","style","textDecoration","src","alt","res","header","get","blob","file","error","App","exact","path","component","render","document","getElementById"],"mappings":"gUAMAA,gBAAqBC,WAAW,UAIhC,IAAIC,EAAO,CAAEC,SAAU,uCAAwCC,aAAc,wCAI7E,SAASC,EAAeC,GACpBC,QAAQC,IAAIF,EAAQG,YAqJTC,MAjEf,WAyCA,IAAIC,EAAQ,IAAIX,QAAaE,GAzCb,EA0CkBU,IAAMC,SAAS,IA1CjC,mBA0CTC,EA1CS,KA0CEC,EA1CF,KA6ChB,OAFAR,QAAQC,IAAI,aAAcM,GAER,cAAdA,EACO,cAAC,IAAD,CAAUE,GAAI,UAKrB,qBAAKC,UAAU,MAAf,SACE,cAAC,SAAD,CACIN,MAAOA,EACPO,WApDR,SAAoBC,GAUhBZ,QAAQC,IAAI,aAAeW,EAAOC,MAClCC,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,OAAQA,EAAOC,SAMhBQ,MAAK,SAAAC,GACC,GAAuB,MAApBA,EAASC,OAOV,MA7BXC,MAAM,mEA6BW,IAAIC,MAAMH,EAASC,QA1BRf,EAAa,gBA8BvCkB,OAAM,SAAAC,GAAG,OAAI3B,QAAQC,IAAI0B,OAiBvB7B,eAAgBA,OC/IX8B,G,YARG,SAAAC,GAChB,OACE,qBAAKnB,UAAWmB,EAAMnB,UAAtB,SACE,kCAAKmB,EAAMC,SAAX,WCQSC,G,MAXA,SAAAF,GACb,OACE,8BACE,yBAAQG,QAASH,EAAMI,SAAUvB,UAAWmB,EAAMnB,UAAlD,UACG,IACAmB,EAAMC,SAAU,WCHnBI,EAAeC,EAAQ,IAsGdC,EAjGE,WAAO,IAAD,EAEW/B,IAAMC,SAAS,IAF1B,mBAEhB+B,EAFgB,KAELC,EAFK,KAGrBtC,QAAQC,IAAI,YAAaoC,GAuDzB,OACA,8BACE,sBAAK3B,UAAU,OAAf,UACE,cAAC,IAAD,CAAMD,GAAG,KAAK8B,MAAO,CAAEC,eAAgB,QAAvC,SACE,eAAC,EAAD,CAAW9B,UAAU,gBAArB,UACE,8BACE,qBAAK+B,IAAI,oCAAoCC,IAAI,OAEnD,oDAKF,cAAC,EAAD,CAAWhC,UAAU,gBAArB,SACA,eAAC,EAAD,CAAQuB,SAxDE,WAIZ,OAAOnB,MAAM,SACVO,MAAK,SAAAsB,GACE3C,QAAQC,IAAI0C,GACZ,IAAMC,EAASD,EAAI3B,QAAQ6B,IAAI,gBAC/B7C,QAAQC,IAAI,SAAU2C,GAEtBD,EAAIG,OACHzB,MAAK,SAAA0B,GAAI,OAAIb,EAAaa,EAFV,oBAIxBrB,OAAM,SAAAsB,GACLhD,QAAQgD,MAAMA,OA0ChB,UACC,IADD,QAEM,SAIN,cAAC,EAAD,CAAWtC,UAAU,gBAArB,SACA,eAAC,EAAD,CAAQuB,SA1CK,WAKf,OApC4BK,EAAa,aAoClCxB,MAAM,aACRO,MAAK,SAAAsB,GACE3C,QAAQC,IAAI0C,GAEZA,EAAIG,OACHzB,MAAK,SAAA0B,GAAI,OAAIb,EAAaa,EAFV,gBAGhB1B,MAAK,SAAA0B,GAAI,OAzCOT,EAAa,UA6CrCZ,OAAM,SAAAsB,GACLhD,QAAQgD,MAAMA,OA0BlB,UACC,IADD,kBAEgB,SAIhB,qBAAKtC,UAAW2B,UC/ETY,EAVH,WACV,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,cAAC,IAAD,CAAOgD,KAAK,QAAQC,UAAWhB,UCLvCiB,iBACI,cAAC,IAAD,UACI,cAAC,EAAD,MAELC,SAASC,eAAe,W","file":"static/js/main.21f467a7.chunk.js","sourcesContent":["import * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nSurvey.StylesManager.applyTheme(\"modern\");\n\n\n\nvar json = { surveyId: '94fddab0-4a51-4b98-abf6-60ef8b895197', surveyPostId: '155b60f3-7268-4c0e-93dc-338fc33f4387'};\n\n\n\nfunction onValueChanged(options) {\n    console.log(options.valuesHash);\n}\n\n\n\n\n\n\n// function uploadFile(file, signedRequest) {\n// let headers = new Headers();\n//\n// headers.append('Content-Type', 'application/json');\n// headers.append('Accept', 'application/json');\n// // headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n// headers.append('Origin','http://localhost:3000');\n//\n// fetch(signedRequest, {\n//     mode: 'cors',\n//     credentials: 'include',\n//     method: 'POST',\n//     headers: headers,\n//     body: file\n// })\n// .then(response => response.json())\n// .then(json => console.log(json))\n// .catch(error => console.log(error.message));\n// }\n\n// function uploadFile(file, signedRequest, url) {\n//                 const xhr = new XMLHttpRequest();\n//                 xhr.open('PUT', signedRequest);\n//                 console.log('Request', signedRequest);\n//                 xhr.onreadystatechange = () => {\n//                     if (xhr.readyState === 4) {\n//                         if (xhr.status === 200) {\n//                             document.getElementById('preview').src = url;\n//                             document.getElementById('avatar-url').value = url;\n//                         } else {\n//                             alert('Could not upload file.');\n//                         }\n//                     }\n//                 };\n//                 xhr.send(file);\n//             }\n\nfunction onUploadFiles(survey, options) {\n    console.log(\"Fire!\", options.files[0]);\n\n    var formData = new FormData();\n\n\n    var file = options.files[0];\n    formData.append('fileName', file.name);\n    formData.append('file', file);\n    formData.append('fileType', file.type);\n    // formData.append(file.name, file);\n    for (var value of formData.values()) {\n    console.log(value.name);\n}\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\n      \"POST\",\n      \"/logmood\",\n      // `/logmood?file-name=${file.name}&file-type=${file.type}`,\n    ); // https://surveyjs.io/api/MySurveys/uploadFiles\n    xhr.onload = function() {\n        var response = JSON.parse(xhr.responseText);\n        console.log(\"Data received\", response);\n\n    };\n    xhr.send(formData);\n    // setTimeout(() => {\n    //     options.callback(\"success\", [\n    //         {\n    //           file: options.files[0],\n    //           content:\n    //               \"https://surveyjs.io/Content/Images/examples/image-picker/panda.jpg\"\n    //         }\n    //     ]);\n    // }, 2000);\n}\n\n\nfunction Home() {\n\n  function onComplete(result) {\n\n    function myFunction() {\n      alert(\"Data could not be saved. Please refresh the page and try again.\");\n}\n\n    const toggleCompleted = () => setCompleted(\"completed\");\n\n\n\n      console.log(\"Complete! \" + result.data);\n      fetch(\"/logmood\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          result: result.data,\n        })\n      })\n        // .then(response => answer = \"Yes\")\n        // .then(response => response.json())\n        // .then(response => console.log(response))\n        .then(response => {\n               if(response.status === 200){\n\n                toggleCompleted();\n\n               } else {\n\n                 myFunction();\n                 throw new Error(response.status);\n\n\n       }})\n       .catch(err => console.log(err));\n}\n\nvar model = new Survey.Model(json);\nconst [completed, setCompleted] = React.useState(\"\");\nconsole.log(\"Completed:\", completed);\n\nif (completed === \"completed\") {\n    return <Redirect to={\"/menu\"} />\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Survey.Survey\n          model={model}\n          onComplete={onComplete}\n          onValueChanged={onValueChanged}\n          // onUploadFiles={onUploadFiles}\n\n\n        />\n    </div>\n  );\n\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./Container.css\";\n\nconst Container = props => {\n  return (\n    <div className={props.className}>\n      <p> {props.children} </p>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = props => {\n  return (\n    <div>\n      <button onClick={props.function} className={props.className}>\n        {\" \"}\n        {props.children}{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Menu.css\";\nimport Container from \"./Container/Container.js\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button/Button\";\nconst fileDownload = require('js-file-download');\n\n\n\n\nconst MainMenu = () => {\n\n  let [indicator, setIndicator] = React.useState(\"\");\n  console.log(\"Indicator\", indicator);\n\n\n  const changeIndicatorOn = () => setIndicator(\"indicator\");\n  const changeIndicatorOff = () => setIndicator(\"\");\n\n  function myFunction(parsed) {\n    var result;\n    console.log(result);\n    return result;\n}\n\n\n  const GetData = () => {\n\n\n\n      return fetch(\"/data\")\n        .then(res => {\n                console.log(res);\n                const header = res.headers.get('Content-Type');\n                console.log(\"Header\", header);\n                const fileName = \"Report.csv\";\n                res.blob()\n                .then(file => fileDownload(file, fileName))\n            })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n\n    /////////////////////\n\n    const GetFiles = () => {\n\n      changeIndicatorOn();\n\n\n      return fetch(\"/download\")\n          .then(res => {\n                  console.log(res);\n                  const fileName = \"Files.zip\";\n                  res.blob()\n                  .then(file => fileDownload(file, fileName))\n                  .then(file => changeIndicatorOff())\n\n\n              })\n          .catch(error => {\n            console.error(error);\n          });\n      };\n\n\n  return (\n  <div>\n    <div className=\"main\">\n      <Link to=\"./\" style={{ textDecoration: \"none\" }}>\n        <Container className=\"greenContFlex\">\n          <div>\n            <img src=\"../../../../assets/groceries1.png\" alt=\"\" />\n          </div>\n          <div>neue Umfrage</div>\n        </Container>\n      </Link>\n\n\n        <Container className=\"brownContFlex\">\n        <Button function={GetData}>\n        {\" \"}\n        DATEN{\" \"}\n      </Button >\n        </Container>\n\n        <Container className=\"greenContFlex\">\n        <Button function={GetFiles}>\n        {\" \"}\n        BILDER & VIDEOS{\" \"}\n      </Button >\n        </Container>\n\n        <div className={indicator}>\n\n          </div>\n\n\n    </div>\n\n\n  </div>\n);\n};\n\nexport default MainMenu;\n","import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport MainMenu from \"./Menu\";\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/menu\" component={MainMenu} />\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nrender((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}